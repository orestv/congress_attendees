// Generated by CoffeeScript 1.4.0
(function() {
  var AttendeeEditor, Index, search,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Index = (function() {

    function Index() {
      this.updateEditedAttendee = __bind(this.updateEditedAttendee, this);

      this.editAttendee = __bind(this.editAttendee, this);

      this.editAttendeeClicked = __bind(this.editAttendeeClicked, this);

      this.createAttendeeRow = __bind(this.createAttendeeRow, this);

      this.populateSearchResults = __bind(this.populateSearchResults, this);

      this.clearSearchResults = __bind(this.clearSearchResults, this);

      this.processSearchRequest = __bind(this.processSearchRequest, this);

      this.searchRequested = __bind(this.searchRequested, this);

      var searchBoxInput, searchbox;
      this.searching = false;
      this.nextSearch = null;
      this.table = document.getElementById('searchResultsTable');
      this.tableBody = document.getElementById('searchResultsBody');
      searchBoxInput = document.getElementById('searchBox');
      searchBoxInput.focus();
      searchbox = new window.SearchBox(searchBoxInput, this.searchRequested);
    }

    Index.prototype.searchRequested = function(searchQuery) {
      if (searchQuery === '') {
        localStorage.removeItem('searchQuery');
        this.nextSearch = null;
        this.searchRequest.abort();
        this.searching = false;
        document.getElementById('imgSearchLoader').style.visibility = 'hidden';
        this.clearSearchResults();
        return;
      }
      localStorage.searchQuery = searchQuery;
      document.getElementById('imgSearchLoader').style.visibility = 'visible';
      if (this.searching) {
        this.searchRequest.abort();
      }
      this.searching = true;
      this.searchRequest = new XMLHttpRequest();
      this.searchRequest.onreadystatechange = this.processSearchRequest;
      this.searchRequest.open('GET', "/attendees?s=" + searchQuery, true);
      this.searchRequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      return this.searchRequest.send(null);
    };

    Index.prototype.processSearchRequest = function() {
      var result;
      if (this.searchRequest.readyState === 4 && this.searchRequest.status === 200) {
        result = JSON.parse(this.searchRequest.responseText);
        this.clearSearchResults();
        this.populateSearchResults(result);
        this.searching = false;
        document.getElementById('imgSearchLoader').style.visibility = 'hidden';
        if (this.nextSearch != null) {
          this.nextSearch();
          return this.nextSearch = null;
        }
      }
    };

    Index.prototype.clearSearchResults = function() {
      var _results;
      this.table.style.visibility = 'hidden';
      _results = [];
      while (this.tableBody.firstChild) {
        _results.push(this.tableBody.removeChild(this.tableBody.firstChild));
      }
      return _results;
    };

    Index.prototype.populateSearchResults = function(results) {
      var attendee, attendee_count, attendees, frag, _fn, _i, _len,
        _this = this;
      this.tableBody = document.getElementById('searchResultsBody');
      frag = document.createDocumentFragment();
      attendees = results['attendees'];
      attendee_count = results['count'];
      if (attendee_count > 0) {
        _fn = function(attendee) {
          return frag.appendChild(_this.createAttendeeRow(attendee));
        };
        for (_i = 0, _len = attendees.length; _i < _len; _i++) {
          attendee = attendees[_i];
          _fn(attendee);
        }
      }
      this.tableBody.appendChild(frag);
      if (attendee_count > 0) {
        document.getElementById('dvNoneFound').style.display = 'none';
        document.getElementById('dvFoundCount').style.display = 'block';
        document.getElementById('spFoundCount').textContent = attendee_count;
      } else {
        document.getElementById('dvNoneFound').style.display = 'block';
        document.getElementById('dvFoundCount').style.display = 'none';
      }
      return this.table.style.visibility = 'visible';
    };

    Index.prototype.createAttendeeRow = function(attendee) {
      var attendeeName, button, city, td, tr,
        _this = this;
      tr = document.createElement('tr');
      city = attendee.city != null ? attendee.city : 'N/A';
      this.appendCell(tr, city);
      attendeeName = "" + attendee.lastname + " " + attendee.firstname + " " + attendee.middlename;
      this.appendCell(tr, attendeeName);
      if ((attendee.registered != null) && attendee.registered) {
        tr.className = 'registered';
      }
      td = document.createElement('td');
      button = document.createElement('input');
      button.type = 'button';
      if (!(attendee.registered != null)) {
        button.value = 'Зареєструвати';
      } else {
        button.value = 'Змінити інформацію';
      }
      button.onclick = function() {
        _this.editAttendeeClicked(attendee);
        return _this.selectedAttendeeRow = tr;
      };
      td.appendChild(button);
      tr.appendChild(td);
      return tr;
    };

    Index.prototype.editAttendeeClicked = function(attendee) {
      if (!attendee.registered || confirm('Цей учасник вже зареєстрований. Ви справді бажаєте змінити його дані?')) {
        localStorage.selectedAttendeeJSON = JSON.stringify(attendee);
        return this.editAttendee(attendee);
      }
    };

    Index.prototype.editAttendee = function(attendee) {
      this.editor = new AttendeeEditor(attendee);
      return this.editor.show();
    };

    Index.prototype.updateEditedAttendee = function(attendeeId) {
      var request,
        _this = this;
      request = new XMLHttpRequest();
      request.onreadystatechange = function() {
        var attendee, newRow;
        if (request.readyState === 4) {
          attendee = JSON.parse(request.responseText).attendee;
          newRow = _this.createAttendeeRow(attendee);
          return _this.tableBody.replaceChild(newRow, _this.selectedAttendeeRow);
        }
      };
      request.open('GET', "/attendees?id=" + attendeeId, true);
      return request.send(null);
    };

    Index.prototype.appendCell = function(tr, text) {
      var td;
      td = document.createElement('td');
      td.appendChild(document.createTextNode(text));
      tr.appendChild(td);
      return td;
    };

    return Index;

  })();

  AttendeeEditor = (function() {

    AttendeeEditor.prototype.fields = {
      'txtFirstname': 'firstname',
      'txtLastname': 'lastname',
      'txtMiddlename': 'middlename',
      'txtCity': 'city',
      'txtPhone': 'personal_phone',
      'txtPosition': 'position',
      'txtOrganization': 'organization'
    };

    function AttendeeEditor(attendee) {
      this.attendee = attendee;
      this.backToList = __bind(this.backToList, this);

      this.registerAttendee = __bind(this.registerAttendee, this);

      this.register = __bind(this.register, this);

      this.getAttendeeData = __bind(this.getAttendeeData, this);

      this.getEventsData = __bind(this.getEventsData, this);

      this.infoInputKeyPressed = __bind(this.infoInputKeyPressed, this);

      this.hide = __bind(this.hide, this);

      this.clear = __bind(this.clear, this);

      this.fill = __bind(this.fill, this);

      this.fetch = __bind(this.fetch, this);

      this.show = __bind(this.show, this);

      this.editorContainer = document.getElementById('attendeeEditorContainer');
      document.getElementById('btnRegisterAttendee').onclick = this.registerAttendee;
      document.getElementById('btnBackToList').onclick = this.backToList;
    }

    AttendeeEditor.prototype.show = function() {
      document.getElementById('searchListContainer').style.display = 'none';
      this.editorContainer.style.display = 'block';
      this.clear();
      return this.fetch();
    };

    AttendeeEditor.prototype.fetch = function() {
      var _this = this;
      this.request = new XMLHttpRequest();
      this.request.onreadystatechange = function() {
        var response;
        if (_this.request.readyState === 4) {
          response = JSON.parse(_this.request.responseText);
          _this.attendee = response.attendee;
          _this.events = response.events;
          return _this.fill();
        }
      };
      this.request.open('GET', "/attendees?id=" + this.attendee._id.$oid, true);
      return this.request.send(null);
    };

    AttendeeEditor.prototype.fill = function() {
      var evt, input, inputId, objectKey, spAttendees, spLimit, _i, _j, _len, _len1, _ref, _ref1, _ref2, _results;
      _ref = this.fields;
      for (inputId in _ref) {
        objectKey = _ref[inputId];
        input = document.getElementById(inputId);
        if (input != null) {
          input.value = this.attendee[objectKey];
          input.onkeyup = this.infoInputKeyPressed;
        }
      }
      _ref1 = this.attendee['attended_events'];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        evt = _ref1[_i];
        document.getElementById(evt['id']).checked = true;
      }
      _ref2 = this.events;
      _results = [];
      for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {
        evt = _ref2[_j];
        spLimit = document.getElementById("spLimit_" + evt._id.$oid);
        spAttendees = document.getElementById("spAttendees_" + evt._id.$oid);
        spLimit.style.color = '#000';
        spAttendees.style.color = '#000';
        if (evt.limit != null) {
          spLimit.textContent = evt.limit;
          spAttendees.textContent = evt.attendees;
          if (evt.attendees >= evt.limit) {
            spAttendees.style.color = '#F00';
            _results.push(spLimit.style.color = '#F00');
          } else {
            _results.push(void 0);
          }
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    AttendeeEditor.prototype.clear = function() {
      var checkbox, input, inputId, objectKey, _i, _len, _ref, _ref1, _results;
      _ref = this.fields;
      for (inputId in _ref) {
        objectKey = _ref[inputId];
        input = document.getElementById(inputId);
        input.value = '';
        input.style.backgroundColor = 'white';
      }
      _ref1 = document.getElementsByName('events');
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        checkbox = _ref1[_i];
        _results.push(checkbox.checked = false);
      }
      return _results;
    };

    AttendeeEditor.prototype.hide = function() {
      document.getElementById('searchListContainer').style.display = 'block';
      this.editorContainer.style.display = 'none';
      return localStorage.removeItem('selectedAttendeeJSON');
    };

    AttendeeEditor.prototype.infoInputKeyPressed = function(event) {
      var fieldId, fieldValue, input;
      input = event.currentTarget;
      fieldId = this.fields[input.id];
      fieldValue = this.attendee[fieldId];
      if (fieldValue !== input.value) {
        return input.style.backgroundColor = '#E0FFE0';
      } else {
        return input.style.backgroundColor = 'white';
      }
    };

    AttendeeEditor.prototype.getEventsData = function() {
      var cb, eventCheckboxes, result;
      eventCheckboxes = document.getElementsByName('events');
      result = [
        (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = eventCheckboxes.length; _i < _len; _i++) {
            cb = eventCheckboxes[_i];
            if (cb.checked) {
              _results.push(cb.id);
            }
          }
          return _results;
        })()
      ];
      return result.join(',');
    };

    AttendeeEditor.prototype.getAttendeeData = function() {
      var input, inputId, objectKey, resultArray, _ref;
      resultArray = [];
      _ref = this.fields;
      for (inputId in _ref) {
        objectKey = _ref[inputId];
        input = document.getElementById(inputId);
        if (input.value === this.attendee[objectKey]) {
          continue;
        }
        resultArray.push("" + objectKey + "=" + input.value);
      }
      return resultArray.join('&');
    };

    AttendeeEditor.prototype.register = function() {
      var attendeeData, data, saveRequest, selectedEvents;
      selectedEvents = this.getEventsData();
      attendeeData = this.getAttendeeData();
      saveRequest = new XMLHttpRequest();
      saveRequest.open('PUT', "/attendees?id=" + this.attendee._id.$oid + "&registered=1", false);
      saveRequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      data = "events=" + selectedEvents;
      if (attendeeData) {
        data += '&' + attendeeData;
      }
      console.log(data);
      return saveRequest.send(data);
    };

    AttendeeEditor.prototype.registerAttendee = function() {
      this.register();
      Page.updateEditedAttendee(this.attendee._id.$oid);
      return this.hide();
    };

    AttendeeEditor.prototype.backToList = function() {
      return this.hide();
    };

    return AttendeeEditor;

  })();

  window.onload = function() {
    return window.Page = new Index();
  };

  search = function(text) {
    return console.log(text);
  };

}).call(this);
